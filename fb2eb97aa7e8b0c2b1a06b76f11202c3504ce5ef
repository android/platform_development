{
  "comments": [
    {
      "key": {
        "uuid": "dc46106f_d13cfdea",
        "filename": "vndk/tools/header-checker/header-abi-linker/src/header_abi_linker.cpp",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1014807
      },
      "writtenOn": "2017-11-03T02:32:07Z",
      "side": 1,
      "message": "Use C++ constexpr:\n\n    static constexpr std::size_t kSourcePerBatchThread \u003d 7;",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 31,
        "endChar": 34
      },
      "revId": "fb2eb97aa7e8b0c2b1a06b76f11202c3504ce5ef",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4dbd6e40_f4ae1a07",
        "filename": "vndk/tools/header-checker/header-abi-linker/src/header_abi_linker.cpp",
        "patchSetId": 3
      },
      "lineNbr": 152,
      "author": {
        "id": 1014807
      },
      "writtenOn": "2017-11-03T02:32:07Z",
      "side": 1,
      "message": "Since we can always derive this from `dump_files.size()`, we don\u0027t have to pass it through a function argument, which may be error-prone.",
      "range": {
        "startLine": 151,
        "startChar": 77,
        "endLine": 152,
        "endChar": 27
      },
      "revId": "fb2eb97aa7e8b0c2b1a06b76f11202c3504ce5ef",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63552e3d_2895f37d",
        "filename": "vndk/tools/header-checker/header-abi-linker/src/header_abi_linker.cpp",
        "patchSetId": 3
      },
      "lineNbr": 156,
      "author": {
        "id": 1014807
      },
      "writtenOn": "2017-11-03T02:32:07Z",
      "side": 1,
      "message": "(following line 152)\n\nAdd here:\n\n    const std::size_t num_dump_files \u003d dump_files.size();",
      "revId": "fb2eb97aa7e8b0c2b1a06b76f11202c3504ce5ef",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba2112c8_19727bbe",
        "filename": "vndk/tools/header-checker/header-abi-linker/src/header_abi_linker.cpp",
        "patchSetId": 3
      },
      "lineNbr": 156,
      "author": {
        "id": 1121338
      },
      "writtenOn": "2017-11-03T02:42:14Z",
      "side": 1,
      "message": "I\u0027d done this earlier, but since we\u0027re passing the same vector to dump_files again and again, why should we\u0027re duplicating work, atleast in this case no ?, could have made it a static variable, but I\u0027m not sure if that would be thread safe.",
      "parentUuid": "63552e3d_2895f37d",
      "revId": "fb2eb97aa7e8b0c2b1a06b76f11202c3504ce5ef",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "480695d7_5915ec98",
        "filename": "vndk/tools/header-checker/header-abi-linker/src/header_abi_linker.cpp",
        "patchSetId": 3
      },
      "lineNbr": 156,
      "author": {
        "id": 1121338
      },
      "writtenOn": "2017-11-03T02:47:05Z",
      "side": 1,
      "message": "Nevermind, its a separate thread should be fine. Unless they get scheduled on the same cpu..",
      "parentUuid": "ba2112c8_19727bbe",
      "revId": "fb2eb97aa7e8b0c2b1a06b76f11202c3504ce5ef",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e735c52_1eee43b9",
        "filename": "vndk/tools/header-checker/header-abi-linker/src/header_abi_linker.cpp",
        "patchSetId": 3
      },
      "lineNbr": 165,
      "author": {
        "id": 1014807
      },
      "writtenOn": "2017-11-03T02:32:07Z",
      "side": 1,
      "message": "I would re-write this as:\n\n    std::size_t end \u003d std::min(i + SOURCES_PER_BATCH_THREAD, num_dump_files);\n\nAnd use:\n\n    local_reader-\u003eReadAllDumps(begin_it + i, begin_it + end);",
      "range": {
        "startLine": 163,
        "startChar": 4,
        "endLine": 165,
        "endChar": 68
      },
      "revId": "fb2eb97aa7e8b0c2b1a06b76f11202c3504ce5ef",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}