{
  "comments": [
    {
      "key": {
        "uuid": "856e7c81_70a3a4e2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 17
      },
      "lineNbr": 7,
      "author": {
        "id": 1022037
      },
      "writtenOn": "2018-06-07T21:09:24Z",
      "side": 1,
      "message": "Add a Python generator for the NDK ICU4C stub.",
      "range": {
        "startLine": 7,
        "startChar": 4,
        "endLine": 7,
        "endChar": 6
      },
      "revId": "ad158082963590c1da00ad340e5a2c726d53d9cb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e18def6a_a464b75a",
        "filename": "ndk/icu/gen_ndk_icu.py",
        "patchSetId": 17
      },
      "lineNbr": 106,
      "author": {
        "id": 1022037
      },
      "writtenOn": "2018-06-07T21:09:24Z",
      "side": 1,
      "message": "ICU only uses @stable, not \\stable. (I didn\u0027t know that that existed.)",
      "range": {
        "startLine": 105,
        "startChar": 38,
        "endLine": 106,
        "endChar": 0
      },
      "revId": "ad158082963590c1da00ad340e5a2c726d53d9cb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "89c94fc2_dc6c9ef7",
        "filename": "ndk/icu/gen_ndk_icu.py",
        "patchSetId": 17
      },
      "lineNbr": 114,
      "author": {
        "id": 1022037
      },
      "writtenOn": "2018-06-07T21:09:24Z",
      "side": 1,
      "message": "Please submit an ICU ticket for issues like this.",
      "range": {
        "startLine": 114,
        "startChar": 73,
        "endLine": 114,
        "endChar": 0
      },
      "revId": "ad158082963590c1da00ad340e5a2c726d53d9cb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53cc1023_60a1c1b2",
        "filename": "ndk/icu/gen_ndk_icu.py",
        "patchSetId": 17
      },
      "lineNbr": 114,
      "author": {
        "id": 1047684
      },
      "writtenOn": "2018-12-13T13:23:07Z",
      "side": 1,
      "message": "https://unicode-org.atlassian.net/browse/ICU-20309. The PR has been approved.",
      "parentUuid": "89c94fc2_dc6c9ef7",
      "range": {
        "startLine": 114,
        "startChar": 73,
        "endLine": 114,
        "endChar": 0
      },
      "revId": "ad158082963590c1da00ad340e5a2c726d53d9cb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93c5ffae_5d2dbd1c",
        "filename": "ndk/icu/gen_ndk_icu.py",
        "patchSetId": 17
      },
      "lineNbr": 146,
      "author": {
        "id": 1022037
      },
      "writtenOn": "2018-06-07T21:09:24Z",
      "side": 1,
      "message": "Ah, tracing...\n\nhttp://icu-project.org/apiref/icu4c/utrace_8h.html\n\n\"This provides API for debugging the internals of ICU without the use of a traditional debugger.\n\nBy default, tracing is disabled in ICU. If you need to debug ICU with tracing, please compile ICU with the â€“enable-tracing configure option.\"\n\nSo this is something for certain developers and likely not available in Android\u0027s ICU.\n\nI think this is a good start for a blacklist, matching any function that starts with \"utrace_\".",
      "range": {
        "startLine": 146,
        "startChar": 47,
        "endLine": 146,
        "endChar": 0
      },
      "revId": "ad158082963590c1da00ad340e5a2c726d53d9cb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b222312f_1c8f8f68",
        "filename": "ndk/icu/gen_ndk_icu.py",
        "patchSetId": 17
      },
      "lineNbr": 252,
      "author": {
        "id": 1022037
      },
      "writtenOn": "2018-06-07T21:09:24Z",
      "side": 1,
      "message": "FYI  Each public ICU header file should have a file comment with\n  \\brief C API: ...\nor\n  \\brief C++ API: ...\n\nCould you use that?",
      "range": {
        "startLine": 251,
        "startChar": 63,
        "endLine": 252,
        "endChar": 0
      },
      "revId": "ad158082963590c1da00ad340e5a2c726d53d9cb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0eed532b_9ffbeec8",
        "filename": "ndk/icu/templates/icundk.cpp",
        "patchSetId": 17
      },
      "lineNbr": 134,
      "author": {
        "id": 1022037
      },
      "writtenOn": "2018-06-07T21:09:24Z",
      "side": 1,
      "message": "Do we get two copies of the pthread_once + versioned_symbol_name per function? One for is-available, and one for do-dlsym?",
      "range": {
        "startLine": 133,
        "startChar": 53,
        "endLine": 134,
        "endChar": 0
      },
      "revId": "ad158082963590c1da00ad340e5a2c726d53d9cb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d740d39_f3f6b99e",
        "filename": "ndk/icu/templates/icundk.cpp",
        "patchSetId": 17
      },
      "lineNbr": 134,
      "author": {
        "id": 1022037
      },
      "writtenOn": "2018-06-07T21:57:11Z",
      "side": 1,
      "message": "At a second look, there is only one version of ndk_is_icu_function_available() and one of do_dlsym(), right? That is, every time someone calls an ICU function the shim calls dlsym(DLL handle, function name) which has to do a lookup -- no caching at all. If so, this could lead to unpleasant performance.",
      "parentUuid": "0eed532b_9ffbeec8",
      "range": {
        "startLine": 133,
        "startChar": 53,
        "endLine": 134,
        "endChar": 0
      },
      "revId": "ad158082963590c1da00ad340e5a2c726d53d9cb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e682a7e_974744c5",
        "filename": "ndk/icu/templates/icundk.cpp",
        "patchSetId": 17
      },
      "lineNbr": 155,
      "author": {
        "id": 1022037
      },
      "writtenOn": "2018-06-07T21:09:24Z",
      "side": 1,
      "message": "Something occurred to me: It is rare but possible that a function moves from the higher i18n library to the lower common library. It looks like is-available would work because it tries both, but do-dlsym would fail on an older ICU version because it is called with the newer DLL handle.\n\nFor example, I did this with ucurr.h, udisplaycontext.h, uldnames.h in ICU 57:\nhttp://bugs.icu-project.org/trac/changeset/38200",
      "range": {
        "startLine": 154,
        "startChar": 55,
        "endLine": 155,
        "endChar": 0
      },
      "revId": "ad158082963590c1da00ad340e5a2c726d53d9cb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}