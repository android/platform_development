{
  "comments": [
    {
      "key": {
        "uuid": "0bf7ff53_66d77e2b",
        "filename": "scripts/cargo2android.py",
        "patchSetId": 1
      },
      "lineNbr": 1071,
      "author": {
        "id": 1208973
      },
      "writtenOn": "2020-07-23T02:04:02Z",
      "side": 1,
      "message": "Is this always the right thing to do?  Could we not have a newer version of the toolchain in tree but still be using an older rustc, which could cause problems?  You do that for LLVM, right?\n\nFor that matter, what rustc does this script use?  Does it specify one or does it use whatever\u0027s on the path?",
      "revId": "f89d3c11cee1101415b49e78a453ecbe6b8cb3d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18c2b5a0_631c4b9d",
        "filename": "scripts/cargo2android.py",
        "patchSetId": 1
      },
      "lineNbr": 1071,
      "author": {
        "id": 1052399
      },
      "writtenOn": "2020-07-23T18:36:03Z",
      "side": 1,
      "message": "This script calls cargo decided from these rules, and then the cargo picks rustc.\n\nYes, sometimes a developer will want a cargo not in the \"newest\" version directory.\nIn that case, the new \"--cargo_bin\" flag can be used.\nI think this \"default to newest version\" will be simpler to maintain than hard-code-and-manually-update the version number.",
      "parentUuid": "0bf7ff53_66d77e2b",
      "revId": "f89d3c11cee1101415b49e78a453ecbe6b8cb3d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d7d14fd9_cf960ccd",
        "filename": "scripts/cargo2android.py",
        "patchSetId": 1
      },
      "lineNbr": 1071,
      "author": {
        "id": 1208973
      },
      "writtenOn": "2020-07-23T20:49:25Z",
      "side": 1,
      "message": "I was more thinking along the lines of how Soong decides which rustc to use.  I assume it could be an older version.  In cases like that, developers could use the new flag to get around that, but they probably wouldn\u0027t notice the difference until something like the inconsistency we discovered.  So I\u0027m wondering if we can somehow query Soong or something to find the right version?  Or maybe lunch and then run rustc -version or something?",
      "parentUuid": "18c2b5a0_631c4b9d",
      "revId": "f89d3c11cee1101415b49e78a453ecbe6b8cb3d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48a8a947_edf2205a",
        "filename": "scripts/cargo2android.py",
        "patchSetId": 1
      },
      "lineNbr": 1071,
      "author": {
        "id": 1052399
      },
      "writtenOn": "2020-07-23T21:36:46Z",
      "side": 1,
      "message": "We cannot call rustc -version to find the version, because we don\u0027t know which rustc to call yet. However, we can try to grep RustDefaultVersion in build/soong/rust/config/global.go to find the version number first. Does that sound right?",
      "parentUuid": "d7d14fd9_cf960ccd",
      "revId": "f89d3c11cee1101415b49e78a453ecbe6b8cb3d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}