{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "29c57384_316e4a8c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1121894
      },
      "writtenOn": "2021-05-20T22:22:59Z",
      "side": 1,
      "message": "any additional comments here ?",
      "revId": "fd06c732e19c2c849c49f4b707afdac9cfd33b59",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3c940ab3_b3f06efb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-05-20T23:53:04Z",
      "side": 1,
      "message": "i\u0027m taking pirama having filed http://b/187231324 for the one todo as a sign that this is good enough for now...",
      "revId": "fd06c732e19c2c849c49f4b707afdac9cfd33b59",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b9ed04e4_afe4b4cb",
        "filename": "scripts/symbol.py",
        "patchSetId": 8
      },
      "lineNbr": 441,
      "author": {
        "id": 1038443
      },
      "writtenOn": "2021-06-02T11:09:47Z",
      "side": 1,
      "message": "This breaks local development\u0027s case. Why did we remove the regexp from before? Should this at least have \u0027prebuilts\u0027 before the clang directory?",
      "revId": "fd06c732e19c2c849c49f4b707afdac9cfd33b59",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b9aae95f_c63e9728",
        "filename": "scripts/symbol.py",
        "patchSetId": 8
      },
      "lineNbr": 441,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2021-06-02T15:14:49Z",
      "side": 1,
      "message": "I even mentioned this exact case in https://android-review.googlesource.com/c/platform/development/+/1682228/5..8/scripts/symbol.py#b443. This shouldn\u0027t be hard-coded here, especially not to an invalid value.",
      "parentUuid": "b9ed04e4_afe4b4cb",
      "revId": "fd06c732e19c2c849c49f4b707afdac9cfd33b59",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc09726d_20535a55",
        "filename": "scripts/symbol.py",
        "patchSetId": 8
      },
      "lineNbr": 441,
      "author": {
        "id": 1121894
      },
      "writtenOn": "2021-06-02T15:17:58Z",
      "side": 1,
      "message": "In the CL llvm-cxxfilt is part of filegroups which are packaged as a relative path to the test binary which is the logic you see here.\n\nThat works through Atest/CI.\n\nThere was a conversation about keeping the fallback for pure local invocation of the binary, and my understanding was that there was a bunch of follow ups needed anyway (was it by pirama?) to not hardcode the version (todo above) and restore the local look up.",
      "parentUuid": "b9aae95f_c63e9728",
      "revId": "fd06c732e19c2c849c49f4b707afdac9cfd33b59",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89e3c69b_55a4723f",
        "filename": "scripts/symbol.py",
        "patchSetId": 8
      },
      "lineNbr": 441,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2021-06-02T15:36:19Z",
      "side": 1,
      "message": "http://b/187231324 seems to be that bug.",
      "parentUuid": "fc09726d_20535a55",
      "revId": "fd06c732e19c2c849c49f4b707afdac9cfd33b59",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "07f56f1c_70c796d5",
        "filename": "scripts/symbol.py",
        "patchSetId": 8
      },
      "lineNbr": 441,
      "author": {
        "id": 1058860
      },
      "writtenOn": "2021-06-02T16:48:51Z",
      "side": 1,
      "message": "b/187231324 is about hardcoding the version name in prebuilts/clang/host/linux-x86/Android.bp.  There\u0027s soong logic needed there to infer the current version (which is tracked in build/soong).\n\nI was not aware of this TODO.  The clang version is available during local usage (from build/soong [1]) but not available here during CI.  We should do the following here:\n  - for local usage: parse https://android.googlesource.com/platform/build/soong/+/refs/heads/master/cc/config/global.go and look for clang version in ClangDefaultVersion\n  - for CI: glob for ./clang-r*\n  \n[1] \u0027ANDROID_BUILD_TOP\u0027 is used at the top of this file so I presume we only support local usage from an Android tree.",
      "parentUuid": "89e3c69b_55a4723f",
      "revId": "fd06c732e19c2c849c49f4b707afdac9cfd33b59",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2fe9569c_087ca042",
        "filename": "scripts/symbol.py",
        "patchSetId": 8
      },
      "lineNbr": 441,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-06-02T16:52:35Z",
      "side": 1,
      "message": "can we set an ANDROID_LLVM_BIN or something in envsetup.sh instead? it seems like this \"go do weird stuff like grepping a .go file\" crops up quite often, and it seems like it would be better if we owned that part and just moved everyone over to using the one true source of truth?",
      "parentUuid": "07f56f1c_70c796d5",
      "revId": "fd06c732e19c2c849c49f4b707afdac9cfd33b59",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "51637f90_4ae1f5b6",
        "filename": "scripts/symbol.py",
        "patchSetId": 8
      },
      "lineNbr": 441,
      "author": {
        "id": 1058860
      },
      "writtenOn": "2021-06-02T16:56:30Z",
      "side": 1,
      "message": "\u003e can we set an ANDROID_LLVM_BIN or something in envsetup.sh instead?\n\nccross@: WDYT?  The last time we talked about this a few years ago, I think the answer was that the clang version parsing happens during build (`m`) and so is not available during envsetup.  But this may be feasible now.",
      "parentUuid": "2fe9569c_087ca042",
      "revId": "fd06c732e19c2c849c49f4b707afdac9cfd33b59",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee80361f_2a282d08",
        "filename": "scripts/symbol.py",
        "patchSetId": 8
      },
      "lineNbr": 441,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2021-06-02T19:52:45Z",
      "side": 1,
      "message": "ANDROID_LLVM_BIN is computed in Soong, which isn\u0027t called during envsetup.sh.  Also, envsetup.sh is generally not a hard requirement to run a build, although maybe it is for atest.",
      "parentUuid": "51637f90_4ae1f5b6",
      "revId": "fd06c732e19c2c849c49f4b707afdac9cfd33b59",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "402e5d9c_cdae5fad",
        "filename": "scripts/symbol.py",
        "patchSetId": 8
      },
      "lineNbr": 441,
      "author": {
        "id": 1058860
      },
      "writtenOn": "2021-06-02T20:43:33Z",
      "side": 1,
      "message": "We could add a script to build/soong/scripts that parses the .go file and returns the version.\n\n(We\u0027d still have to fallback to the glob for CI but it\u0027s ok since there\u0027s just going to be one version in that scenario).",
      "parentUuid": "ee80361f_2a282d08",
      "revId": "fd06c732e19c2c849c49f4b707afdac9cfd33b59",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "395b9cf1_54700fd0",
        "filename": "scripts/symbol.py",
        "patchSetId": 8
      },
      "lineNbr": 441,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-06-02T20:58:00Z",
      "side": 1,
      "message": "that sounds good too. i\u0027m not attached to any specific mechanism, i just want to have _one_ place that knows how to do this (especially if \"this\" is \"grep a .go source file\"). we already have too many \u0027clang-r12345\u0027s lying around, and getting a similar number of copy \u0026 paste greps sounds even worse!",
      "parentUuid": "402e5d9c_cdae5fad",
      "revId": "fd06c732e19c2c849c49f4b707afdac9cfd33b59",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82010a0a_68e133d7",
        "filename": "scripts/symbol.py",
        "patchSetId": 8
      },
      "lineNbr": 441,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2021-06-02T21:11:33Z",
      "side": 1,
      "message": "How about putting a json config file in prebuilts/host/clang/linux-x86 and have Soong load the clang config from there?",
      "parentUuid": "395b9cf1_54700fd0",
      "revId": "fd06c732e19c2c849c49f4b707afdac9cfd33b59",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}