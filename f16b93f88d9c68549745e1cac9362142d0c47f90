{
  "comments": [
    {
      "key": {
        "uuid": "ce380d5f_4106b2be",
        "filename": "ndk/sources/android/ndk_icu/gen-ndk-icu.py",
        "patchSetId": 2
      },
      "lineNbr": 377,
      "author": {
        "id": 1056365
      },
      "writtenOn": "2015-01-09T23:51:03Z",
      "side": 1,
      "message": "this is newly added to properly handle functions w/ variable number of arguments.",
      "revId": "f16b93f88d9c68549745e1cac9362142d0c47f90",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ef945d6_f7d2e815",
        "filename": "ndk/sources/android/ndk_icu/gen-ndk-icu.py",
        "patchSetId": 2
      },
      "lineNbr": 387,
      "author": {
        "id": 1056365
      },
      "writtenOn": "2015-01-09T23:51:03Z",
      "side": 1,
      "message": "the blacklist for the deprecated functions to be excluded when generating the lib.\n\nactually i was wrong in one of my previous comments about deprecated functions. i found all the deprecated functions still exist in later versions, but with some deprecated flag. since we are not defining the macro (HIDE_DEPRECATED_API) to hide them when compiling the icu4c library, they are included in the library with actual functionalities.",
      "revId": "f16b93f88d9c68549745e1cac9362142d0c47f90",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2efc49c4_2b913a5b",
        "filename": "ndk/sources/android/ndk_icu/gen-ndk-icu.py",
        "patchSetId": 2
      },
      "lineNbr": 387,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-01-09T23:53:37Z",
      "side": 1,
      "message": "oops. want to upload an icu change to fix that?",
      "parentUuid": "0ef945d6_f7d2e815",
      "revId": "f16b93f88d9c68549745e1cac9362142d0c47f90",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ef945d6_972614a4",
        "filename": "ndk/sources/android/ndk_icu/include/ndkicu.h",
        "patchSetId": 2
      },
      "lineNbr": 1092,
      "author": {
        "id": 1056365
      },
      "writtenOn": "2015-01-09T23:51:03Z",
      "side": 1,
      "message": "i\u0027m adding a new function for ndk users to get the status/the  loaded icu version on device.",
      "revId": "f16b93f88d9c68549745e1cac9362142d0c47f90",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2efc49c4_f9e9bb41",
        "filename": "ndk/sources/android/ndk_icu/ndk_icu.c",
        "patchSetId": 2
      },
      "lineNbr": 170,
      "author": {
        "id": 1056365
      },
      "writtenOn": "2015-01-09T23:51:03Z",
      "side": 1,
      "message": "this is the version that preloads all the symbols during initialization. i tried to measure the time cost for dlsym: by repeating the following 768 dlsym by 100 times, it costs about 65-70ms. and for the overall time cost with my benchmark, (1) no caching, no preloading: ~30s; (2) no preloading but w/ caching: ~25s; (3) preloading: ~25s. (2) and (3) are quite close. possibly because (a) the dlsym cost is low; (b) the benchmark i was using covers most of the functions so it doesn\u0027t matter whether to load all of them beforehand or on the fly.",
      "revId": "f16b93f88d9c68549745e1cac9362142d0c47f90",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}