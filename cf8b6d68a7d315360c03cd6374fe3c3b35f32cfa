{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "dc846214_6c7a446e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1121894
      },
      "writtenOn": "2021-05-05T15:27:44Z",
      "side": 1,
      "message": "Thanks Pirama for the follow up. Resolving some of the open comments.",
      "revId": "cf8b6d68a7d315360c03cd6374fe3c3b35f32cfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b3a3ef4_157d8908",
        "filename": "scripts/Android.bp",
        "patchSetId": 6
      },
      "lineNbr": 62,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-05-05T15:51:59Z",
      "side": 1,
      "message": "does someone on your team plan to go through the whole tree removing these later then? (what\u0027s the default? i\u0027m assuming we can\u0027t _already_ delete this? but that seems like something someone should be looking into, given that python2 is end of life and has started to be removed from machines?)",
      "range": {
        "startLine": 59,
        "startChar": 8,
        "endLine": 62,
        "endChar": 10
      },
      "revId": "cf8b6d68a7d315360c03cd6374fe3c3b35f32cfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f1dd1fcc_17fd886b",
        "filename": "scripts/Android.bp",
        "patchSetId": 6
      },
      "lineNbr": 62,
      "author": {
        "id": 1121894
      },
      "writtenOn": "2021-05-05T15:56:57Z",
      "side": 1,
      "message": "I am not familiar with the Android tree plan on this. Might defer to Soong folks for their plan :)",
      "parentUuid": "0b3a3ef4_157d8908",
      "range": {
        "startLine": 59,
        "startChar": 8,
        "endLine": 62,
        "endChar": 10
      },
      "revId": "cf8b6d68a7d315360c03cd6374fe3c3b35f32cfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe320107_c683db9c",
        "filename": "scripts/symbol.py",
        "patchSetId": 6
      },
      "lineNbr": 440,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-05-05T15:51:59Z",
      "side": 1,
      "message": "add a comment here, explaining that the intent here is to support CI where the llvm-cxxfilt binary is bundled with the script?\n\ni don\u0027t think shutil.which() is what you want here though, because this would also find an llvm-cxxfilt in /usr/bin. since the idea is to be hermetic, don\u0027t you need to look _exactly_ where the test infrastructure will have put the llvm-cxxfilt binary? (which i guess is the current directory? so something more like os.path.exists(\u0027llvm-cxxfilt\u0027)?)",
      "revId": "cf8b6d68a7d315360c03cd6374fe3c3b35f32cfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a512504_173ce9de",
        "filename": "scripts/symbol.py",
        "patchSetId": 6
      },
      "lineNbr": 440,
      "author": {
        "id": 1121894
      },
      "writtenOn": "2021-05-05T15:56:57Z",
      "side": 1,
      "message": "The challenge is that it\u0027s not necessary in the flat same directory (could be in some subdir).\n\nI made sure the runner add them to the $PATH before invoking them, but i might have done it in a way that respect the existing $PATH vars priority, i could invert it though to ensure that bundled resources have priorities (which makes sense to me)",
      "parentUuid": "fe320107_c683db9c",
      "revId": "cf8b6d68a7d315360c03cd6374fe3c3b35f32cfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31bd2771_a4286765",
        "filename": "scripts/symbol.py",
        "patchSetId": 6
      },
      "lineNbr": 440,
      "author": {
        "id": 1121894
      },
      "writtenOn": "2021-05-05T16:01:12Z",
      "side": 1,
      "message": "also that brings, do you want to keep the searching thing for */prebuilts/ stuff too then? so you can invoke it standalone i am guessing ?",
      "parentUuid": "2a512504_173ce9de",
      "revId": "cf8b6d68a7d315360c03cd6374fe3c3b35f32cfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37a7009d_c495f360",
        "filename": "scripts/symbol.py",
        "patchSetId": 6
      },
      "lineNbr": 440,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-05-05T16:10:57Z",
      "side": 1,
      "message": "yeah, the normal use-case is to invoke this directly, and we _always_ want to be running the prebuilt. we _never_ want \"some random binary that happens to be on your path\".\n\n\u003e The challenge is that it\u0027s not necessary in the flat same directory (could be in some subdir).\n\nbut surely it\u0027s deterministic? if not, that seems to be the first problem to solve. then it\u0027s easy to just have this script look exactly there?",
      "parentUuid": "31bd2771_a4286765",
      "revId": "cf8b6d68a7d315360c03cd6374fe3c3b35f32cfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2303b8f5_a73c1d60",
        "filename": "scripts/symbol.py",
        "patchSetId": 6
      },
      "lineNbr": 440,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2021-05-05T16:14:25Z",
      "side": 1,
      "message": "http://b/187231324 is Pirama\u0027s attempt to remove the hardcoding (while making this deterministic).",
      "parentUuid": "37a7009d_c495f360",
      "revId": "cf8b6d68a7d315360c03cd6374fe3c3b35f32cfa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}