{
  "comments": [
    {
      "key": {
        "uuid": "ada24f36_0dd03ea5",
        "filename": "gsi/gsi_util/gsi_util/checkers/sepolicy_checker.py",
        "patchSetId": 6
      },
      "lineNbr": 117,
      "author": {
        "id": 1120915
      },
      "writtenOn": "2018-01-31T15:36:40Z",
      "side": 1,
      "message": "This looks good to me.\n\nAnother idea.. if you would like to use a command helper, how about something like\n\nsecilic_helper \u003d sepolicy_utils.helper(). \\\n  multiple_decl(). \\\n  mls(). \\\n  disable_neverallow(). \\\n  set_output(\u0027/dev/null\u0027). \\\n  set_file_context(\u0027/dev/null\u0027)\n\n...\n\nseclic_helper.add_cil_file(plat_sepolicy)\n...\n\nresult_ok, stderr \u003d seclic_helper.execute()",
      "range": {
        "startLine": 117,
        "startChar": 4,
        "endLine": 117,
        "endChar": 18
      },
      "revId": "3128bff6722acb11f458ade6d7bf417d01dab803",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c08e7d86_4e7cebc3",
        "filename": "gsi/gsi_util/gsi_util/checkers/sepolicy_checker.py",
        "patchSetId": 6
      },
      "lineNbr": 117,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2018-01-31T23:45:08Z",
      "side": 1,
      "message": "Great, looks a fancy design.\n\nBut this is a bit overkill to me here.\nAnd if secilc has some new options, we have to add a new method for it, right? e.g., secilc_helper.my_new_option(my_new_value).\n\nIn current implementation, we just need the caller to put { my_new_option: my_new value } into the options dict, no need to change sepolicy_utils.py.\n\nI\u0027m ok to add this change though.\nLet\u0027s see how Szuwei think about it.",
      "parentUuid": "ada24f36_0dd03ea5",
      "range": {
        "startLine": 117,
        "startChar": 4,
        "endLine": 117,
        "endChar": 18
      },
      "revId": "3128bff6722acb11f458ade6d7bf417d01dab803",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c61223e_e84b0d4f",
        "filename": "gsi/gsi_util/gsi_util/checkers/sepolicy_checker.py",
        "patchSetId": 6
      },
      "lineNbr": 117,
      "author": {
        "id": 1128729
      },
      "writtenOn": "2018-02-01T02:47:05Z",
      "side": 1,
      "message": "I like Po-Chien\u0027s suggestion, it is the \"builder\" design pattern.\nHowever, current function is good enough to me, because we have only one user here. It is good enough to understand the code to me. I think we could modify it if we have further user to use it.",
      "parentUuid": "c08e7d86_4e7cebc3",
      "range": {
        "startLine": 117,
        "startChar": 4,
        "endLine": 117,
        "endChar": 18
      },
      "revId": "3128bff6722acb11f458ade6d7bf417d01dab803",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}