{
  "comments": [
    {
      "key": {
        "uuid": "69ba4e01_44eedaac",
        "filename": "vndk/tools/header-checker/header-abi-diff/src/abi_diff_wrappers.cpp",
        "patchSetId": 2
      },
      "lineNbr": 110,
      "author": {
        "id": 1121338
      },
      "writtenOn": "2017-12-18T10:42:06Z",
      "side": 1,
      "message": "Can\u0027t make this a function since EnumTypes and RecordTypes aren\u0027t exactly in the same hierarchy. Can make this a macro if that improves code duplication / readability.",
      "range": {
        "startLine": 104,
        "startChar": 1,
        "endLine": 110,
        "endChar": 3
      },
      "revId": "727387825dc0d2b92504819474f1f4092585bc10",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "717f1d7b_905f5f2b",
        "filename": "vndk/tools/header-checker/header-abi-dumper/src/abi_wrappers.cpp",
        "patchSetId": 2
      },
      "lineNbr": 160,
      "author": {
        "id": 1014807
      },
      "writtenOn": "2017-12-19T02:59:03Z",
      "side": 1,
      "message": "Can we generate unique type id by using mangled names regardless the extern \"C\" context or the language being selected?",
      "range": {
        "startLine": 160,
        "startChar": 6,
        "endLine": 160,
        "endChar": 77
      },
      "revId": "727387825dc0d2b92504819474f1f4092585bc10",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12b77fe4_771e7a39",
        "filename": "vndk/tools/header-checker/header-abi-dumper/src/abi_wrappers.cpp",
        "patchSetId": 2
      },
      "lineNbr": 160,
      "author": {
        "id": 1121338
      },
      "writtenOn": "2017-12-19T06:08:07Z",
      "side": 1,
      "message": "I tried doing that, and it seems to work. However, on going through clang\u0027s TBAA code and CodeGen code, mangleCXXRTTIName is always used when the language context is CPlusPlus. Also, i\u0027m not sure if it makes sense having mangled names in C context. So I\u0027m wary of doing that.",
      "parentUuid": "717f1d7b_905f5f2b",
      "range": {
        "startLine": 160,
        "startChar": 6,
        "endLine": 160,
        "endChar": 77
      },
      "revId": "727387825dc0d2b92504819474f1f4092585bc10",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35327651_5860d759",
        "filename": "vndk/tools/header-checker/header-abi-dumper/src/abi_wrappers.cpp",
        "patchSetId": 2
      },
      "lineNbr": 160,
      "author": {
        "id": 1121338
      },
      "writtenOn": "2017-12-19T06:09:34Z",
      "side": 1,
      "message": "Another option: while linking, link C and C++ types seperately. While diffing, diff two types from the same language context.",
      "parentUuid": "12b77fe4_771e7a39",
      "range": {
        "startLine": 160,
        "startChar": 6,
        "endLine": 160,
        "endChar": 77
      },
      "revId": "727387825dc0d2b92504819474f1f4092585bc10",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "874d07fe_190cfcde",
        "filename": "vndk/tools/header-checker/header-abi-dumper/src/abi_wrappers.cpp",
        "patchSetId": 2
      },
      "lineNbr": 160,
      "author": {
        "id": 1014807
      },
      "writtenOn": "2017-12-19T06:21:12Z",
      "side": 1,
      "message": "\u003e Another option: while linking, link C and C++ types seperately. While diffing, diff two types from the same language context.\n\nI think this will not work because the problem you are facing is that the same struct definition has been compiled under different context.",
      "parentUuid": "35327651_5860d759",
      "range": {
        "startLine": 160,
        "startChar": 6,
        "endLine": 160,
        "endChar": 77
      },
      "revId": "727387825dc0d2b92504819474f1f4092585bc10",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ced60863_60202cc9",
        "filename": "vndk/tools/header-checker/header-abi-dumper/src/abi_wrappers.cpp",
        "patchSetId": 2
      },
      "lineNbr": 160,
      "author": {
        "id": 1014807
      },
      "writtenOn": "2017-12-19T06:24:38Z",
      "side": 1,
      "message": "Or alternatively, we can encode the unique id with another strategy:\n\nIf the type is a CXXRecordDecl and decl-\u003egetDescribedClassTemplate() !\u003d nullptr, then use mangled name.\n\nOtherwise, use normal name.",
      "parentUuid": "874d07fe_190cfcde",
      "range": {
        "startLine": 160,
        "startChar": 6,
        "endLine": 160,
        "endChar": 77
      },
      "revId": "727387825dc0d2b92504819474f1f4092585bc10",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}